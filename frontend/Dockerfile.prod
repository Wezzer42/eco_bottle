# Multi-stage build for production
FROM node:20-bullseye AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app
# Install deps (including dev) for building
COPY package.json package-lock.json* ./
# Use install to allow build without a lockfile inside this workspace
RUN npm config set registry https://registry.npmjs.org/ \
 && npm config set fetch-retry-maxtimeout 600000 \
 && npm install --no-audit --no-fund


# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build the application
RUN npm run build

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public

# Set the correct permission for prerender cache
RUN mkdir .next
RUN chown nextjs:nodejs .next

# Automatically leverage output traces to reduce image size
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

CMD ["node", "server.js"]
