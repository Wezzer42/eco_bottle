version: "3.9"

services:
  nginx:
    image: nginx:1.27
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: ecobottle
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "app"]
      interval: 5s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7
    ports: ["6379:6379"]

  api1:
    build: ./backend
    environment:
      DATABASE_URL: postgresql://app:app@postgres:5432/ecobottle?schema=public
      JWT_SECRET: devsecret
      REDIS_URL: redis://redis:6379
      PORT: 4000
      PROM_PORT: 9100
      CDN_BASE: https://res.cloudinary.com/demo/image/upload
    depends_on:
      - postgres
      - redis
    ports:
      - "9100:9100"

  api2:
    build: ./backend
    environment:
      DATABASE_URL: postgresql://app:app@postgres:5432/ecobottle?schema=public
      JWT_SECRET: devsecret
      REDIS_URL: redis://redis:6379
      PORT: 4000
      PROM_PORT: 9101
      CDN_BASE: https://res.cloudinary.com/demo/image/upload
    depends_on:
      - postgres
      - redis
    ports:
      - "9101:9101"

  frontend:
    build:
      context: ./frontend
    environment:
      NEXT_PUBLIC_API_BASE: http://localhost:8080
    ports:
      - "3000:3000"

