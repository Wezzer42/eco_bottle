# Multi-stage build for production
FROM node:20-bullseye AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app
COPY package.json package-lock.json* ./
# Avoid prisma postinstall before schema is copied; we'll run generate later
ENV PRISMA_SKIP_POSTINSTALL=1
# Install all deps for build (prisma, types); allow missing lockfile in CI
RUN npm config set registry https://registry.npmjs.org/ \
 && npm config set fetch-retry-maxtimeout 600000 \
 && npm install --no-audit --no-fund --ignore-scripts

# Build the source code
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Generate Prisma client and build TypeScript
RUN npx prisma generate --schema=./prisma/schema.prisma
RUN npm run build

# Production image
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
RUN addgroup --system --gid 1001 nodejs \
  && adduser --system --uid 1001 nodejs

# Copy built application
COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nodejs:nodejs /app/package.json ./package.json
COPY --from=builder --chown=nodejs:nodejs /app/prisma ./prisma

USER nodejs

EXPOSE 4000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:4000/api/health || exit 1

CMD ["node", "dist/src/server.js"]
