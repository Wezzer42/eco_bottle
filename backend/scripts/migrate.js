import { PrismaClient } from '@prisma/client';
import { exec } from 'child_process';
import { promisify } from 'util';

const execAsync = promisify(exec);
const prisma = new PrismaClient();

async function runMigrations() {
  console.log('üîÑ Starting database migrations...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    await prisma.$connect();
    console.log('‚úÖ Database connection established');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    console.log('üì¶ Running Prisma migrations...');
    const { stdout, stderr } = await execAsync('npx prisma migrate deploy');
    
    if (stderr) {
      console.warn('‚ö†Ô∏è Migration warnings:', stderr);
    }
    
    console.log('‚úÖ Migrations completed successfully');
    console.log(stdout);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma Client
    console.log('üîß Generating Prisma Client...');
    await execAsync('npx prisma generate');
    console.log('‚úÖ Prisma Client generated');
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Migration failed:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

runMigrations();
